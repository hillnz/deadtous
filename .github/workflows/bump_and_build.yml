name: build docker image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_REPO: jonoh/deadtous

jobs:

  version:
    name: Check version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump version on MR, if required
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          VERSION="$(jq -r .version <package.json)"
          if git rev-parse "$VERSION"; then
            npm install
            git checkout "${{ github.head_ref }}"
            npm version --no-git-tag-version patch
            VERSION=$(jq -r .version <package.json)
            git add package.json oclif.manifest.json README.md
            git commit -m 'Bump version'
            git push
          fi

      - name: Tag version on main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          VERSION="$(jq -r .version <package.json)"
          git tag "$VERSION"
          git push --tags

  build:
    name: Build docker
    needs: version
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - platform: linux/amd64,linux/arm/v7,linux/arm64
            target: final
            suffix: ""
          - platform: linux/amd64
            target: lambda
            suffix: -lambda

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set docker tag
        id: docker_tag
        run: |
          echo "::set-output name=DOCKER_TAG::$(jq -r .version <package.json)"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.target }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: "${{ env.DOCKER_REPO }}:${{ steps.docker_tag.outputs.DOCKER_TAG }}${{ matrix.suffix }},${{ env.DOCKER_REPO }}:latest${{ matrix.suffix }}"

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPO }}
          readme-filepath: ./README.md

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          dry-run: ${{ github.ref != 'refs/heads/main' }}
          check-version: true
